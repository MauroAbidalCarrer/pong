{"ast":null,"code":"var _jsxFileName = \"/home/ma/another-pong-in-p5js/src/PongGame.js\";\nimport React from 'react';\nimport { ReactP5Wrapper } from \"@p5-wrapper/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PongGame() {\n  const sketch = p5 => {\n    const canvasWidth = 800;\n    const canvasHeight = 600;\n    const playerWidth = 30;\n    const playerOffset = 10;\n    const playerHeight = 100;\n    const ballRadius = 15;\n    let playerLeft;\n    let playerRight;\n    let ball;\n    function clamp(num, min, max) {\n      return Math.max(Math.min(num, max), min);\n    }\n    class Player {\n      constructor(x) {\n        this.pos = p5.createVector(x, canvasHeight / 2);\n        this.points = 0;\n        console.log('Player constructed');\n      }\n      draw() {\n        p5.rectMode(p5.CENTER);\n        p5.rect(this.pos.x, this.pos.y, playerWidth, playerHeight);\n        p5.rectMode(p5.CORNER);\n      }\n      move(upKey, downKey) {\n        //get the direction\n        let direction = 0;\n        if (p5.keyIsDown(upKey)) direction = -1;\n        if (p5.keyIsDown(downKey)) direction = 1;\n        //move\n        this.pos.y += direction * canvasHeight * 0.5 * (p5.deltaTime / 1000);\n        //clampthe position\n        this.pos.y = Math.max(this.pos.y, playerHeight / 2);\n        this.pos.y = Math.min(this.pos.y, canvasHeight - playerHeight / 2);\n      }\n    }\n    class Ball {\n      constructor() {\n        this.pos = p5.createVector(canvasWidth / 2, canvasHeight / 2);\n        //left(1) or right(2)\n        this.direction = 1;\n        this.verticalMovement = 0;\n      }\n      draw() {\n        p5.circle(this.pos.x, this.pos.y, ballRadius * 2);\n      }\n      checkOverlap(player) {\n        // Find the closest point to the circle within the rectangle\n        let closestX = clamp(this.pos.x - player.pos.x, -playerWidth / 2, playerWidth / 2) + player.pos.x;\n        let closestY = clamp(this.pos.y - player.pos.y, -playerHeight / 2, playerHeight / 2) + player.pos.y;\n        // Calculate the distance between the circle's center and the closest point\n        var distanceX = this.pos.x - closestX;\n        var distanceY = this.pos.y - closestY;\n        var distanceSquared = distanceX * distanceX + distanceY * distanceY;\n        // Check if the distance is less than the circle's radius squared\n        return distanceSquared <= ballRadius * ballRadius;\n      }\n      bounceOffPlayer(player) {\n        let dir = p5.createVector(this.pos.x - player.pos.x, this.pos.y - player.pos.y);\n        dir.normalize();\n        this.direction *= -1;\n        this.verticalMovement = dir.y * 90;\n      }\n      givepointToPlayer(player) {\n        this.pos = p5.createVector(canvasWidth / 2, canvasHeight / 2);\n        player.points++;\n        //console.log(player.points)\n      }\n\n      move() {\n        this.pos.x += this.direction * canvasWidth * (p5.deltaTime / 1000);\n        this.pos.y += this.verticalMovement * (p5.deltaTime / 1000);\n        //bounce off players\n        if (this.checkOverlap(playerLeft) && this.direction === -1) this.bounceOffPlayer(playerLeft);\n        if (this.checkOverlap(playerRight) && this.direction === 1) this.bounceOffPlayer(playerRight);\n        //bounce off walls\n        if (this.pos.y > canvasHeight - ballRadius || this.pos.y < ballRadius) {\n          this.verticalMovement *= -1;\n        }\n        if (this.pos.x > canvasWidth - ballRadius) this.givepointToPlayer(playerLeft);\n        if (this.pos.x < ballRadius) this.givepointToPlayer(playerRight);\n      }\n    }\n    p5.setup = () => {\n      // Your setup code here.\n      p5.createCanvas(canvasWidth, canvasHeight);\n      playerLeft = new Player(playerOffset + playerWidth);\n      playerRight = new Player(canvasWidth - playerOffset - playerWidth);\n      ball = new Ball();\n      console.log('setup called');\n    };\n    p5.draw = () => {\n      // Your draw code here.\n      p5.background(220);\n      playerLeft.draw();\n      playerRight.draw();\n      ball.draw();\n      playerLeft.move(p5.UP_ARROW, p5.DOWN_ARROW);\n      playerRight.move(87, 83);\n      ball.move();\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(ReactP5Wrapper, {\n    sketch: sketch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 12\n  }, this);\n}\n_c = PongGame;\nvar _c;\n$RefreshReg$(_c, \"PongGame\");","map":{"version":3,"names":["React","ReactP5Wrapper","jsxDEV","_jsxDEV","PongGame","sketch","p5","canvasWidth","canvasHeight","playerWidth","playerOffset","playerHeight","ballRadius","playerLeft","playerRight","ball","clamp","num","min","max","Math","Player","constructor","x","pos","createVector","points","console","log","draw","rectMode","CENTER","rect","y","CORNER","move","upKey","downKey","direction","keyIsDown","deltaTime","Ball","verticalMovement","circle","checkOverlap","player","closestX","closestY","distanceX","distanceY","distanceSquared","bounceOffPlayer","dir","normalize","givepointToPlayer","setup","createCanvas","background","UP_ARROW","DOWN_ARROW","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ma/another-pong-in-p5js/src/PongGame.js"],"sourcesContent":["import React from 'react';\nimport { ReactP5Wrapper } from \"@p5-wrapper/react\";\n\nexport default function PongGame() {\n    const sketch = p5 => {\n        const canvasWidth = 800;\n        const canvasHeight = 600;\n        const playerWidth = 30;\n        const playerOffset = 10;\n        const playerHeight = 100;\n        const ballRadius = 15;\n\n        let playerLeft;\n        let playerRight;\n        let ball;\n\n        function clamp(num, min, max){\n        return Math.max(Math.min(num, max), min)\n        }\n        class Player{\n            constructor(x)\n            {\n                this.pos = p5.createVector(x, canvasHeight / 2)\n                this.points = 0\n                console.log('Player constructed')\n            }\n            \n            draw()\n            {\n                p5.rectMode(p5.CENTER)\n                p5.rect(this.pos.x, this.pos.y, playerWidth, playerHeight)\n                p5.rectMode(p5.CORNER)\n            }\n            move(upKey, downKey)\n            {\n                //get the direction\n                let direction = 0\n                if (p5.keyIsDown(upKey))\n                direction = -1\n                if (p5.keyIsDown(downKey))\n                direction = 1\n                //move\n                this.pos.y += direction * canvasHeight * 0.5 * (p5.deltaTime / 1000)\n                //clampthe position\n                this.pos.y = Math.max(this.pos.y, playerHeight / 2)\n                this.pos.y = Math.min(this.pos.y, canvasHeight - playerHeight / 2)\n            }\n            }\n\n        class Ball{\n            constructor()\n            {\n                this.pos = p5.createVector(canvasWidth / 2, canvasHeight / 2)\n                //left(1) or right(2)\n                this.direction = 1\n                this.verticalMovement = 0\n            }\n            draw()\n            {\n                p5.circle(this.pos.x, this.pos.y, ballRadius * 2)\n            }\n            checkOverlap(player) {\n                // Find the closest point to the circle within the rectangle\n                let closestX = clamp(this.pos.x - player.pos.x,-playerWidth / 2, playerWidth / 2) + player.pos.x\n                let closestY = clamp(this.pos.y - player.pos.y, -playerHeight / 2, playerHeight / 2) + player.pos.y\n                // Calculate the distance between the circle's center and the closest point\n                var distanceX = this.pos.x - closestX;\n                var distanceY = this.pos.y - closestY;\n                var distanceSquared = (distanceX * distanceX) + (distanceY * distanceY);\n                // Check if the distance is less than the circle's radius squared\n                return distanceSquared <= (ballRadius * ballRadius);\n            }\n            bounceOffPlayer(player) {\n                let dir = p5.createVector(this.pos.x - player.pos.x, this.pos.y - player.pos.y);\n                dir.normalize();\n                this.direction *= -1;\n                this.verticalMovement = dir.y * 90;\n            }            \n            givepointToPlayer(player){\n                this.pos = p5.createVector(canvasWidth / 2, canvasHeight / 2)\n                player.points++\n                //console.log(player.points)\n            }\n            move()\n            {\n                this.pos.x += this.direction * canvasWidth * (p5.deltaTime / 1000)\n                this.pos.y += this.verticalMovement * (p5.deltaTime / 1000)\n                //bounce off players\n                if (this.checkOverlap(playerLeft) && this.direction === -1)\n                this.bounceOffPlayer(playerLeft)\n                if (this.checkOverlap(playerRight) && this.direction === 1)\n                this.bounceOffPlayer(playerRight)\n                //bounce off walls\n                if (this.pos.y > canvasHeight - ballRadius || this.pos.y < ballRadius){\n                this.verticalMovement *= -1\n                }\n                if (this.pos.x > canvasWidth - ballRadius)\n                this.givepointToPlayer(playerLeft)\n                if (this.pos.x < ballRadius)\n                this.givepointToPlayer(playerRight)\n            }\n        }\n\n        p5.setup = () => {\n            // Your setup code here.\n            p5.createCanvas(canvasWidth, canvasHeight);\n            playerLeft = new Player(playerOffset + playerWidth);\n            playerRight = new Player(canvasWidth - playerOffset - playerWidth);\n            ball = new Ball();\n            console.log('setup called')\n        };\n\n        p5.draw = () => {\n            // Your draw code here.\n            p5.background(220);\n            playerLeft.draw();\n            playerRight.draw();\n            ball.draw();\n\n            playerLeft.move(p5.UP_ARROW, p5.DOWN_ARROW);\n            playerRight.move(87, 83);\n            ball.move();\n        };\n\n    };\n\n    return <ReactP5Wrapper sketch={sketch} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}